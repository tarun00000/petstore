# This is a basic workflow to help you get started with Actions

name: petstore-cicd

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'
      - 'k8s/**'
      - 'terraform/**'
      - 'terraform_aws/**'
    
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'
      - 'k8s/**'
      - 'terraform/**'
      - 'terraform_aws/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [11]
        os: [ubuntu-latest] #windows-2016

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: "echo Hello, Here comes CI CD"

      # You can cache your dependencies to speed up your workflow runs. 
      # After a successful run, your local Maven repository will be stored in a cache. 
      # In future workflow runs, the cache will be restored so that dependencies don't need to be downloaded from remote Maven repositories. 
      # You can cache dependencies simply using the setup-java action or can use cache action for custom and more advanced configuration.
      - name: setup-java-env
        uses: actions/setup-java@v3      # USes is a way to call github action
        with:                            # with is way to passing argument to action   
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven

      - name: Build-with-Maven
        run: mvn clean install -DskipTests
        
      - uses: actions/upload-artifact@v3
        with: 
          name: jar-artifcats
          path: target/spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar
      
  
  execut-and-test:
    
    name: exec-test
    runs-on: ubuntu-latest
    needs: build # this will make sure next step will run after build job
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with: 
          name: jar-artifcats
          
      # calling guthub action 
      - name: create a release draft for a milestone from githubaction
        id: create-release-draft #you will use it getting outout put of the github action. 
        uses: ./ #private github
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
          
      - name: Print the URL of the realease draft
        if: steps.create-release-draft.outputs.release-url !=''
        run: echo ${{steps.create-release-draft.outputs.release-url}}
      
      - name: execute
        run: |
          java -jar spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar
      
      - name: curl
        run: |
          sleep 20
          curl 127.0.0.1:8080
